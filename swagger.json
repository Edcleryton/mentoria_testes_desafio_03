{
  "openapi": "3.0.0",
  "info": {
    "title": "API Login de Usuários",
    "version": "1.0.0",
    "description": "API para gestão de login de usuários"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "usuario@email.com"
          },
          "password": {
            "type": "string",
            "minLength": 12,
            "maxLength": 16,
            "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[!@#$%^&*()_+\\-=[\\]{};':\\\\\"|,.<>/?]).{12,16}$",
            "example": "SenhaForte123!"
          }
        }
      },
      "RememberPasswordRequest": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "usuario@email.com"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": { "type": "string", "example": "Mensagem de erro descritiva." }
        }
      }
    },
    "responses": {
      "InternalServerError": {
        "description": "Internal Server Error. Ocorreu um erro inesperado no servidor.",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/ErrorResponse" }
          }
        }
      },
      "BadRequest": {
        "description": "Bad Request. Requisição mal formatada ou campos obrigatórios ausentes.",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/ErrorResponse" }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized. Credenciais incorretas.",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/ErrorResponse" }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden. Usuário sem permissão.",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/ErrorResponse" }
          }
        }
      },
      "NotFound": {
        "description": "Not Found. Usuário não encontrado.",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/ErrorResponse" }
          }
        }
      }
    }
  },
  "paths": {
    "/login": {
      "post": {
        "summary": "Autentica um usuário",
        "description": "Recebe username e senha para autenticação.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoginRequest" },
              "example": {
                "username": "user@email.com",
                "password": "User12345678!"
              }
            }
          }
        },
        "responses": {
          "200": { "description": "OK. Login bem-sucedido." },
          "201": {
            "description": "Created. Login realizado e sessão criada (caso aplicável).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "token": { "type": "string", "description": "JWT de autenticação" }
                  }
                }
              }
            }
          },
          "203": { "description": "Non-Authoritative Information. Login realizado, mas informações retornadas podem ser parciais." },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "403": { "$ref": "#/components/responses/Forbidden" },
          "429": { "description": "Too Many Requests. Conta bloqueada temporariamente por múltiplas tentativas." },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        }
      }
    },
    "/remember-password": {
      "post": {
        "summary": "Solicita instruções para lembrar a senha do usuário",
        "description": "Envia instruções de recuperação de senha para o usuário informado.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RememberPasswordRequest" },
              "example": {
                "username": "user@email.com"
              }
            }
          }
        },
        "responses": {
          "200": { "description": "OK. Instruções de recuperação enviadas." },
          "201": { "description": "Created. Solicitação de recuperação criada com sucesso." },
          "203": { "description": "Non-Authoritative Information. Solicitação processada, mas informações podem ser parciais." },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "403": { "$ref": "#/components/responses/Forbidden" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        }
      }
    },
    "/register": {
      "post": {
        "summary": "Cadastro de novo usuário",
        "description": "Permite que um novo usuário se cadastre informando username e password.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoginRequest" },
              "example": {
                "username": "novoUsuario@email.com",
                "password": "senhaForte123!"
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Created. Usuário cadastrado com sucesso." },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        }
      }
    },
    "/admin/user": {
      "patch": {
        "summary": "Admin: Atualiza nome ou senha de qualquer usuário",
        "security": [ { "bearerAuth": [] } ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": { "type": "string", "format": "email" },
                  "password": { "type": "string", "minLength": 12, "maxLength": 16 },
                  "newUsername": { "type": "string", "format": "email" }
                },
                "required": ["username"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Usuário atualizado com sucesso." },
          "400": { "description": "Dados inválidos." },
          "401": { "description": "Token não fornecido." },
          "403": { "description": "Apenas administradores podem alterar outros usuários." },
          "404": { "description": "Usuário não encontrado." }
        }
      }
    },
    "/user": {
      "delete": {
        "summary": "Admin: Deleta usuário",
        "security": [ { "bearerAuth": [] } ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": { "type": "string", "format": "email" }
                },
                "required": ["username"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Usuário deletado com sucesso." },
          "400": { "description": "Username do usuário a ser deletado é obrigatório." },
          "401": { "description": "Token não fornecido." },
          "403": { "description": "Apenas administradores podem deletar usuários." },
          "404": { "description": "Usuário não encontrado." }
        }
      }
    }
  }
} 